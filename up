#!/bin/bash
export SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
home=/home/paulo
picompath="$home/.config/picom"

#down the last running theme
if [ -f "/tmp/leftwm-theme-down" ]; then
    /tmp/leftwm-theme-down
    rm /tmp/leftwm-theme-down
fi

ln -s ${SCRIPTPATH}/down /tmp/leftwm-theme-down

run () {
    if [ -x $(command -v "$1") ]; then
        if ! pgrep $1; then
            $@ &
        fi
    fi
}

#boot compton or picom if it exists
if ! pgrep -x "picom" > /dev/null
then
    nohup picom --config "$picompath/picom.conf" > /dev/null 2>&1 &
else
    pkill picom
    nohup picom --config "$picompath/picom.conf" > /dev/null 2>&1 &
fi

# Align DPMS and screensaver to 15 minutes
xset s 900
xset dpms 900 900 900

# Run xidlehook
if [ -x "$(command -v xidlehook)" ]; then
    if  pgrep xidlehook; then
      pkill xidlehook
      sleep 0.1
    fi

    xidlehook \
      --socket /tmp/xidlehook.sock \
      --not-when-audio \
      --not-when-fullscreen \
      --timer 900 'i3lock -i /home/paulo/src/paulo-leftwm-theme/images/lock.png' '' \
      --timer 60 'notify-send -u critical -t 10000 "LOCKING SCREEN IN 60 SECONDS"' '' \
      --timer 900 'xset s off && xset -dpms' '' \
      --timer 901 'xset s on && xset +dpms' '' &
fi

#set the theme.ron config
leftwm-command "LoadTheme $SCRIPTPATH/theme.ron"

#set background
run feh --bg-scale --randomize "$SCRIPTPATH/images/wallpapers"

# PA Sys Tray
run pasystray

# extra utils to make this theme a little more homey
run dunst -config ~/.config/dunst/dunstrc

# We want the kde/gnome polkit auth agent running for mounting hd and stuff
# run /usr/libexec/kf5/polkit-kde-authentication-agent-1
run /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Clipboard manager
run parcellite

# launch network-manager applet, but only if it's not already running
# This is needed for vpn
run nm-applet --indicator

# Screenshot tool
run flameshot

#boot  polybar
index=0
id=0
monitors=($(polybar -m | sed s/:.*//))
leftwm-state -q -n -t "$SCRIPTPATH/sizes.liquid" | sed -r '/^\s*$/d' | while read -r width x y
do
  barname="mainbar$id"
  monitor="${monitors[index]}" workspace="$id" width="$(( width - 16 ))" offsetx="$(( 8 + x ))" polybar -c "$SCRIPTPATH"/polybar/config.ini "$barname" &> /dev/null &
  let id=id+1
done
